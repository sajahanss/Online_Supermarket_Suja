{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import FormContainer from'../components/FormContainer';import{getUserDetails,updateUser}from'../actions/userActions';import{USER_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UserEditScreen=_ref=>{let{match,history}=_ref;const userId=match.params.id;const[name,setName]=useState('');const[email,setEmail]=useState('');const[isAdmin,setIsAdmin]=useState(false);const dispatch=useDispatch();const userDetails=useSelector(state=>state.userDetails);const{loading,error,user}=userDetails;const userUpdate=useSelector(state=>state.userUpdate);const{loading:loadingUpdate,error:errorUpdate,success:successUpdate}=userUpdate;useEffect(()=>{if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userlist');}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[dispatch,history,userId,user,successUpdate]);const submitHandler=e=>{e.preventDefault();dispatch(updateUser({_id:userId,name,email,isAdmin}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",className:\"btn btn-light my-3\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:e=>setName(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:e=>setIsAdmin(e.target.checked)})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});};export default UserEditScreen;","map":{"version":3,"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UserEditScreen","_ref","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","submitHandler","e","preventDefault","children","to","className","variant","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","target","Check","label","checked"],"sources":["C:/Users/sajah/OneDrive/Desktop/sujatha/online-grocerystore/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}